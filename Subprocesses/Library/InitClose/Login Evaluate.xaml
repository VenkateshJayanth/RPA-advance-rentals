<Activity mc:Ignorable="sap sap2010" x:Class="Login_Evaluate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_IntDefaultDelay" Type="InArgument(x:Int32)" />
    <x:Property Name="in_IntDefaultTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="in_StrWindowsUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_SstrWindowsPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_StrEvaluateUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_SstrEvaluatePassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_StrEvaluateUrl" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>829,5025</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Login Evaluate : Component login to Evaluate" DisplayName="Login Evaluate" sap:VirtualizedContainerService.HintSize="839,4920" sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Login Evaluate" Name="strComponentName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[String.Format(&quot;Started Component: {0}&quot;, strComponentName)]" />
    <Sequence sap2010:Annotation.AnnotationText="Checking All Incoming Arguments" DisplayName="Incoming Argument Check" sap:VirtualizedContainerService.HintSize="797,1757" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_IntDefaultDelay&gt;0]" DisplayName="If (in_IntDefaultDelay&gt;0)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_IntDefaultDelay Value Is Greater Than 0&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_IntDefaultDelay Value Is Not Greater Than 0&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </If.Else>
      </If>
      <If Condition="[in_IntDefaultTimeout&gt;0]" DisplayName="If (in_IntDefaultTimeout&gt;0)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_IntDefaultTimeout Value Is Greater Than 0&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_IntDefaultTimeout Value Is Not Greater Than 0&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrEmpty(in_StrEvaluateUsername)]" DisplayName="If (Not String.IsNullOrEmpty(in_StrUsername))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_StrEvaluateUsername Value Is Not Empty.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_StrEvaluateUsername Value Is Empty Or Null.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrEmpty(in_SstrEvaluatePassword.ToString)]" DisplayName="If (Not String.IsNullOrEmpty(in_SstrPassword.ToString))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_SstrEvaluatePassword Value Is Not Empty.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_SstrEvaluatePassword Value Is Empty Or Null.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrEmpty(in_StrWindowsUsername)]" DisplayName="If (Not String.IsNullOrEmpty(in_StrWindowsUsername))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_8">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_StrWindowsUsername Value Is Not Empty.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_StrWindowsUsername Value Is Empty Or Null.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
        </If.Else>
      </If>
      <If Condition="[Not String.IsNullOrEmpty(in_SstrWindowsPassword.ToString)]" DisplayName="If (Not String.IsNullOrEmpty(in_SstrWindowsPassword.ToString))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_SstrWindowsPassword Value Is Not Empty.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_SstrWindowsPassword Value Is Empty Or Null.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Pre-condition Check" DisplayName="Pre-Condition Check" sap:VirtualizedContainerService.HintSize="797,1301" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="boolPreConditionCheck" />
        <Variable x:TypeArguments="x:Boolean" Name="boolProxySignInBoxAppears" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:UiElementExists DisplayName="Element Exists 'Proxy Sign In Dialog Box with Username'" Exists="[boolProxySignInBoxAppears]" sap:VirtualizedContainerService.HintSize="579,68" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9795c10a-5d13-426f-988b-89da09350846" Selector="&lt;html app='chrome.exe' title='*xperian*' /&gt;&lt;ctrl name='Username' role='editable text' /&gt;" TimeoutMS="[in_IntDefaultTimeout]" WaitForReady="NONE" />
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="579,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Does Proxy Sign In Dialog Box Appears? &quot; + boolProxySignInBoxAppears.ToString]" />
      <If Condition="[boolProxySignInBoxAppears]" sap:VirtualizedContainerService.HintSize="579,552" sap2010:WorkflowViewState.IdRef="If_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,404" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Into 'Proxy Sign In Username'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_3" Text="[in_StrWindowsUsername]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4636d871-0592-4851-b5b5-dff51e2c79e0" Selector="&lt;html app='chrome.exe' title='*xperian*' /&gt;&lt;ctrl name='Username' role='editable text' /&gt;" TimeoutMS="[in_IntDefaultTimeout]" WaitForReady="NONE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Secure Text 'Proxy Sign In Password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="TypeSecureText_3" SecureText="[in_SstrWindowsPassword]">
              <ui:TypeSecureText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="88e43bf0-0195-47ef-81b1-8520dae5b3a4" Selector="&lt;html app='chrome.exe' title='*xperian*' /&gt;&lt;ctrl name='Password' role='editable text' /&gt;" TimeoutMS="[in_IntDefaultTimeout]" WaitForReady="NONE" />
              </ui:TypeSecureText.Target>
            </ui:TypeSecureText>
            <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click 'Proxy Dialog Sign In'" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8711ae86-e933-46a2-a5d6-68395f950d85" Selector="&lt;html app='chrome.exe' title='*xperian*' /&gt;&lt;ctrl name='Sign in' role='push button' /&gt;" TimeoutMS="[in_IntDefaultTimeout]" WaitForReady="NONE" />
              </ui:Click.Target>
            </ui:Click>
          </Sequence>
        </If.Then>
      </If>
      <ui:UiElementExists DisplayName="Element Exists 'User Id'" Exists="[boolPreConditionCheck]" sap:VirtualizedContainerService.HintSize="579,68" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="765015b6-f1ea-413b-93f4-aaeebc34cc5f" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='text' aaname='*User ID*' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[boolPreConditionCheck]" DisplayName="If (boolPreConditionCheck)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Pre Condition Check Successful. User Id Field Exists.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[New Exception(&quot;Pre Condition Check Failed. User Id Field Does Not Exists.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
        </If.Else>
      </If>
    </Sequence>
    <If sap2010:Annotation.AnnotationText="Checking if the URL is for UAT Evaluate or Prod Evaluate, as the Login Page slightly differs between the environments" Condition="[in_StrEvaluateUrl.Equals(&quot;https://uat-evaluate.b.apps.experian.com/&quot;)]" DisplayName="If UAT Evaluate or Prod Evaluate" sap:VirtualizedContainerService.HintSize="797,722" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="Enter Username and Password and Click Validate to Login" DisplayName="Do Work" sap:VirtualizedContainerService.HintSize="376,543" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Into 'User Id'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[in_StrEvaluateUsername]">
            <ui:TypeInto.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="25406668-f4ad-48d0-b4f0-9afbe4e68a7a" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='text' aaname='*User ID*' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:TypeInto.Target>
          </ui:TypeInto>
          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click 'Next'" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="20ad7516-f420-45d6-a727-6b0e77c78643" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='submit' aaname='Next' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Secure Text 'Password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[in_SstrEvaluatePassword]">
            <ui:TypeSecureText.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9414d8c7-1583-4240-92d6-795e4bf84f42" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='password' aaname='Password ' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:TypeSecureText.Target>
          </ui:TypeSecureText>
          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click 'Verify'" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e122194a-1adf-42b5-b3e5-8a4b6cf7b3d6" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='submit' aaname='Verify' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:Annotation.AnnotationText="Enter Username and Password and Click Validate to Login" DisplayName="Do Work" sap:VirtualizedContainerService.HintSize="376,435" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Into 'User Id'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_4" Text="[in_StrEvaluateUsername]">
            <ui:TypeInto.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="25406668-f4ad-48d0-b4f0-9afbe4e68a7a" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='text' aaname='*User ID*' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:TypeInto.Target>
          </ui:TypeInto>
          <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Type Secure Text 'Password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="TypeSecureText_4" SecureText="[in_SstrEvaluatePassword]">
            <ui:TypeSecureText.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9414d8c7-1583-4240-92d6-795e4bf84f42" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='password' aaname='Password ' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:TypeSecureText.Target>
          </ui:TypeSecureText>
          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click 'Sign In'" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e122194a-1adf-42b5-b3e5-8a4b6cf7b3d6" Selector="&lt;html app='chrome.exe' title='*Experian*' /&gt;&lt;webctrl tag='INPUT' type='submit' aaname='Sign In' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
        </Sequence>
      </If.Else>
    </If>
    <Sequence sap2010:Annotation.AnnotationText="Post-condition Check" DisplayName="Post-Condition Check" sap:VirtualizedContainerService.HintSize="797,470" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="boolPostConditionCheck" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:UiElementExists DisplayName="Element Exists 'Logged In' Heading" Exists="[boolPostConditionCheck]" sap:VirtualizedContainerService.HintSize="579,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2db702f9-b301-48e4-bccd-2b2545ecf8d7" Selector="&lt;html app='chrome.exe' url='*experian*' /&gt;&lt;webctrl aaname='*Logged in*' tag='SPAN' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[boolPostConditionCheck]" DisplayName="If (boolPostConditionCheck)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Post Condition Check Successful. Logged In Successfully.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[New Exception(&quot;Post Condition Check Failed. Unable To Find 'Logged In' Heading.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Checking All Outgoing Arguments" DisplayName="Outgoing Argument Check" sap:VirtualizedContainerService.HintSize="621,125" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="621,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[String.Format(&quot;Ended Component: {0}&quot;, strComponentName)]" />
  </Sequence>
</Activity>